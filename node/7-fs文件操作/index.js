/*  
    文件读写 i/o【相对于内存而言】【在开发中大多数都是反正来的】
    读：把读取到的内容放到内存中
    写：读取内存中的内容写入到文件中
    【读取文件默认都是buffer类型，第二个参数可以指定类型】
    【读取文件不存在会报错，写入的时候文件不存在会创建文件，如果文件存在会清空文件】
    【对于大文件来说，读取文件之后再写入对性能不是很好】【见例子1.1】
    【读取大文件的时候，操作要使用"流"【有方向，从一个地方到另一个地方】要用到底层的文件操作，需要对文件进行精确的读取】【见例子1.2】
*/
const fs = require('fs');
const path = require('path');
//=============================== 例子1.1 =============================
//这种不适合大文件读取【假如内存只有1G，文件大小为2G，那先把内容读取到内存中再去写入，那么会卡死】
fs.readFile(path.resolve(__dirname,'1.js'),'utf8',(err,data)=>{
    fs.writeFile(path.resolve(__dirname,'1.copy.js'),data,(err)=>{
        console.log(err);
    })
})
//=============================== 例子1.2 =============================